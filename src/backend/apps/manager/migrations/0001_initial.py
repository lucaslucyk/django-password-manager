# Generated by Django 3.2.20 on 2023-07-04 03:52

from django.db import migrations, models
import django.db.models.deletion
import utils.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Entry identifier', max_length=255, verbose_name='Name')),
                ('notes', models.TextField(blank=True, help_text='Aditional notes', null=True, verbose_name='Notes')),
            ],
            options={
                'verbose_name_plural': 'Entries',
            },
        ),
        migrations.CreateModel(
            name='Field',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Field identifier', max_length=100, verbose_name='Name')),
                ('is_secret', models.BooleanField(default=False, help_text='Defines if value must be encrypted and not displayed by default', verbose_name='Secret')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Tag identifier', max_length=255, verbose_name='Name')),
                ('slug', models.SlugField(blank=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Template identifier', max_length=255, verbose_name='Name')),
            ],
        ),
        migrations.CreateModel(
            name='Validator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Validator identifier', max_length=255, verbose_name='Name')),
                ('validator_class', models.CharField(help_text='Full class import. E.g. "django.core.validators.URLValidator"', max_length=255, verbose_name='Class')),
            ],
        ),
        migrations.CreateModel(
            name='ValidatorArgument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(help_text='Tag identifier', max_length=255, validators=[utils.validators.KeywordValidator], verbose_name='Name')),
                ('value', models.CharField(help_text='Argument YAML value', max_length=255, verbose_name='Value')),
                ('validator', models.ForeignKey(help_text='Validator', on_delete=django.db.models.deletion.CASCADE, related_name='validator_args', to='manager.validator', verbose_name='Validator')),
            ],
        ),
        migrations.CreateModel(
            name='TemplateField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_required', models.BooleanField(default=False, help_text='Defines if at least one element of type is required', verbose_name='Required')),
                ('field', models.ForeignKey(help_text='Field', on_delete=django.db.models.deletion.CASCADE, to='manager.field', verbose_name='Field')),
                ('template', models.ForeignKey(help_text='Template', on_delete=django.db.models.deletion.CASCADE, to='manager.template', verbose_name='Template')),
                ('validators', models.ManyToManyField(blank=True, related_name='template_fields', to='manager.Validator')),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Group identifier', max_length=255, verbose_name='Name')),
                ('parent', models.ForeignKey(blank=True, help_text='Parent Group', null=True, on_delete=django.db.models.deletion.SET_NULL, to='manager.group', verbose_name='Parent')),
                ('tags', models.ManyToManyField(blank=True, related_name='groups', to='manager.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='EntryField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(help_text='Field value', max_length=255, verbose_name='Value')),
                ('entry', models.ForeignKey(help_text='Entry', on_delete=django.db.models.deletion.CASCADE, to='manager.entry', verbose_name='Entry')),
                ('field', models.ForeignKey(help_text='Field', on_delete=django.db.models.deletion.CASCADE, to='manager.field', verbose_name='Field')),
            ],
        ),
        migrations.AddField(
            model_name='entry',
            name='group',
            field=models.ForeignKey(help_text='Group folder', on_delete=django.db.models.deletion.CASCADE, to='manager.group', verbose_name='Group'),
        ),
        migrations.AddField(
            model_name='entry',
            name='template',
            field=models.ForeignKey(help_text='Entry template', on_delete=django.db.models.deletion.CASCADE, to='manager.template', verbose_name='Template'),
        ),
    ]
